@using Neumont_Ticketing_System.Models.Assets;
@model Neumont_Ticketing_System.Views.Settings.LoanerEditorModel;
@{
    if(Model.HasLoaner)
    {
        ViewData["Title"] = "Edit Loaner";
    } else
    {
        ViewData["Title"] = "Create Loaner";
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Scripts
{
    <script src="~/js/expandableInputList.js" type="text/javascript"></script>
    <script src="~/js/expandableItemList.js" type="text/javascript"></script>
    @if (Model.HasLoaner)
    {
        <script src="~/js/LoanerEditor.js" type="text/javascript"></script>
    }
    else
    {
        <script src="~/js/LoanerCreator.js" type="text/javascript"></script>
    }
}

<link href="~/css/expandableItemList.css" rel="stylesheet" type="text/css" />

<h1>@(Model.HasLoaner ? "Edit this loaner" : "Create new loaners")</h1>

<div class="list" id="loanerList">
    <h2 class="listTitle">@(Model.HasLoaner ? "Edit Loaner" : "Create Loaner")</h2>
    <div class="listItem cloneableListItem loanerContainer">
        <div class="inputContainer">
            <p class="inputLabel">Loaner's Name: </p>
            <input class="text-box single-line nameInput"
                   type="text" value="@(Model.HasLoaner ? Model.Loaner.Name : "")"
                   autocomplete="new-password" />
        </div>
        <div class="inputContainer">
            <p class="inputLabel">Serial Number: </p>
            <input class="text-box single-line nameInput"
                   type="text" value="@(Model.HasLoaner ?
                                        Model.AssociatedAsset.SerialNumber : "")"
                   autocomplete="new-password" />
        </div>
        <div class="inputContainer">
            <p class="inputLabel">Model: </p>
            <select class="modelSelector">
                @foreach (AssetModel model in Model.AssetModels)
                {
                    <option value="@(model.Name)"
                            selected=@(Model.HasLoaner ?
                        Model.AssociatedAsset.ModelId == model.Id : false)>
                        @(model.Name)
                    </option>
                }
            </select>
        </div>
    </div>
    @if (!Model.HasLoaner)
    {
        <div class="listItem btnAddListItemContainer btnNewLoanerContainer">
            <button class="btnAddListItem btnNewLoaner" id="btnNewLoaner">Add Loaner</button>
        </div>
    }
    <div class="btnSubmitCtr">
        <button class="btnSubmit" id="btnSubmit">@(Model.HasLoaner ? "Update" : "Submit")</button>
    </div>
</div>