@model Neumont_Ticketing_System.Views.Settings.AssetCreatorModel
@using Neumont_Ticketing_System.Models.Assets
@{
    if(Model.HasOwner)
    {
        ViewData["Title"] = "Edit Owner";
    } else
    {
        ViewData["Title"] = "Create Owner";
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Scripts
{
    <script src="~/js/expandableInputList.js" type="text/javascript"></script>
    <script src="~/js/expandableItemList.js" type="text/javascript"></script>
    @if(Model.HasOwner)
    {
        <script src="~/js/AssetEditor.js" type="text/javascript"></script>
    } else
    {
        <script src="~/js/AssetCreator.js" type="text/javascript"></script>
    }
}

<link href="~/css/expandableItemList.css" rel="stylesheet" type="text/css" />

<h1>@(Model.HasOwner ? "Edit this owner" : "Create new owners")</h1>

<div class="list" id="ownerList">
    <h2 class="listTitle">@(Model.HasOwner ? "Edit Owner" : "Create Owner")</h2>
    <div class="listItem cloneableListItem ownerContainer">
        <div class="inputContainer">
            <p class="inputLabel">Owner's Name: </p>
            <input class="text-box single-line nameInput"
                   type="text" value="@(Model.Owner?.Name ?? "")"
                   autocomplete="new-password" />
        </div>
        <div class="inputContainer">
            <p class="inputLabel">Preferred First Name: </p>
            <input class="text-box single-line preferredFNameInput"
                   type="text" value="@(Model.Owner?.PreferredName?.First ?? "")"
                   autocomplete="new-password" />
        </div>
        <div class="inputContainer">
            <p class="inputLabel">Preferred Middle Name: </p>
            <input class="text-box single-line preferredMNameInput"
                   type="text" value="@(Model.Owner?.PreferredName?.Middle ?? "")"
                   autocomplete="new-password" />
        </div>
        <div class="inputContainer">
            <p class="inputLabel">Preferred Last Name: </p>
            <input class="text-box single-line preferredLNameInput"
                   type="text" value="@(Model.Owner?.PreferredName?.Last ?? "")"
                   autocomplete="new-password" />
        </div>
        <div class="inputContainer phoneNumberContainer">
            <p class="inputLabel">Phone Numbers: </p>
            @if (Model.HasOwner)
            {
                @foreach (string phoneNumber in Model.Owner.PhoneNumbers)
                {
                    <input class="text-box single-line expandableListInput phoneNumberInput"
                           type="tel" value="@(phoneNumber)" autocomplete="new-password" />
                }
            }
            <input class="text-box single-line expandableListInput phoneNumberInput"
                   type="tel" autocomplete="new-password" />
        </div>
        <div class="inputContainer emailAddressContainer">
            <p class="inputLabel">Email addresses: </p>
            @if (Model.HasOwner)
            {
                @foreach (string emailAddress in Model.Owner.EmailAddresses)
                {
                    <input class="text-box single-line expandableListInput emailAddressInput"
                           type="email" value="@(emailAddress)" autocomplete="new-password" />
                }
            }
            <input class="text-box single-line expandableListInput emailAddressInput"
                   type="email" autocomplete="new-password" />
        </div>
        <div class="assetList">
            <h3 class="listTitle">Owned Assets</h3>
            @if (Model.HasOwner)
            {
                @foreach (Asset asset in Model.OwnedAssets)
                {
                    <div class="listSubItem assetContainer cloneableListItem">
                        <div class="listItemHeader">
                            <div class="listHeaderButtonContainer">
                                <button class="itemActionButton btnDeleteAsset">
                                    <img class="iconDeleteAsset itemActionButtonIcon" src="~/assets/freepik-delete.svg" />
                                </button>
                            </div>
                        </div>
                        <div class="inputContainer">
                            <p class="inputLabel">Serial Number: </p>
                            <input class="text-box single-line serialNumberInput"
                                   type="text"
                                   value="@(asset.SerialNumber)" autocomplete="new-password" />
                        </div>
                        <div class="inputContainer">
                            <p class="inputLabel">Model: </p>
                            <select class="modelSelector">
                                @foreach (AssetModel model in Model.AssetModels)
                                {
                                    <option value="@(model.Name)"
                                            selected=@(asset.ModelId == model.Id)>
                                        @(model.Name)
                                    </option>
                                }
                            </select>
                        </div>
                    </div>
                }
            }
            <div class="listSubItem assetContainer cloneableListItem">
                <div class="listItemHeader">
                    <div class="listHeaderButtonContainer">
                        <button class="itemActionButton btnDeleteAsset">
                            <img class="iconDeleteAsset itemActionButtonIcon" src="~/assets/freepik-delete.svg" />
                        </button>
                    </div>
                </div>
                <div class="inputContainer">
                    <p class="inputLabel">Serial Number: </p>
                    <input class="text-box single-line serialNumberInput"
                           type="text"
                           value="" autocomplete="new-password" />
                </div>
                <div class="inputContainer">
                    <p class="inputLabel">Model: </p>
                    <select class="modelSelector">
                        @for (int k = 0; k < Model.AssetModels.Count; k++)
                        {
                            var model = Model.AssetModels[k];
                            <option value="@(model.Name)"
                                    selected=@(k == 0)>
                                @(model.Name)
                            </option>
                        }
                    </select>
                </div>
            </div>
            <div class="listSubItem btnAddListItemContainer btnAddAssetContainer">
                <button class="btnAddListSubItem btnAddAsset">Add Asset</button>
            </div>
        </div>
    </div>
    @if (!Model.HasOwner)
    {
        <div class="listItem btnAddListItemContainer btnNewOwnerContainer">
            <button class="btnAddListItem btnNewOwner" id="btnNewOwner">Add Owner</button>
        </div>
    }
    <div class="btnSubmitCtr">
        <button class="btnSubmit" id="btnSubmit">@(Model.HasOwner ? "Update" : "Submit")</button>
    </div>
</div>