@model Neumont_Ticketing_System.Views.Settings.AssetDefinitionsModel
@{
    ViewData["Title"] = "AssetDef";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Scripts
{
    <script src="~/js/AssetDefinitions.js" type="text/javascript"></script>
    <script src="~/js/expandableInputList.js" type="text/javascript"></script>
    <script src="~/js/expandableItemList.js" type="text/javascript"></script>
}

<link href="~/css/expandableItemList.css" rel="stylesheet" type="text/css" />
<link href="~/css/AssetDefinitions.css" rel="stylesheet" type="text/css" />

<h1>Asset Definitions</h1>

<div class="list" id="typesList">
    <h2 class="listTitle">Asset Types</h2>
    @if (Model.AssetTypes.Count > 0)
    {
        @for (int i = 0; i < Model.AssetTypes.Count; i++)
        {
            var type = Model.AssetTypes[i];
            <div class="listItem cloneableListItem typeContainer">
                <div class="inputContainer">
                    <p class="inputLabel">Name: </p>
                    <input class="text-box single-line nameInput" type="text" 
                           value="@(type.Name)" old-value="@(type.Name)"
                           original-value="@(type.Name)" autocomplete="off"/>
                </div>
                <div class="inputContainer">
                    <p class="inputLabel">Description: </p>
                    <input class="text-box single-line descriptionInput" type="text" 
                           value="@(type.Description)" old-value="@(type.Description)" 
                           autocomplete="off"/>
                </div>
            </div>
        }
    }
    else
    {
        <div class="listItem cloneableListItem typeContainer">
            <div class="inputContainer">
                <p class="inputLabel">Name: </p>
                <input class="text-box single-line nameInput" type="text" 
                       autocomplete="off"/>
            </div>
            <div class="inputContainer">
                <p class="inputLabel">Description: </p>
                <input class="text-box single-line descriptionInput" type="text" 
                       autocomplete="off"/>
            </div>
        </div>
    }
    <div class="listItem btnAddListItemContainer">
        <button class="btnAddListItem" id="btnNewType">Add Type</button>
    </div>
</div>

<div class="list" id="manufacturersList">
    <h2 class="listTitle">Asset Manufacturers</h2>
    @if (Model.AssetManufacturers.Count > 0)
    {
        @for (int i = 0; i < Model.AssetManufacturers.Count; i++)
        {
            var mfr = Model.AssetManufacturers[i];
            <div class="listItem cloneableListItem manufacturerContainer">
                <div class="inputContainer">
                    <p class="inputLabel">Name: </p>
                    <input class="text-box single-line nameInput" type="text" 
                           value="@(mfr.Name)" old-value="@(mfr.Name)" 
                           original-value="@(mfr.Name)" autocomplete="off">
                </div>
                <div class="inputContainer phoneNumberContainer">
                    <p class="inputLabel">Phone Numbers: </p>
                    @for (int j = 0; j <= mfr.PhoneNumbers.Count; j++)
                    {
                        if (j >= mfr.PhoneNumbers.Count)
                        {
                            <input class="text-box single-line expandableListInput phoneNumberInput"
                                   type="tel" autocomplete="off"/>
                        }
                        else
                        {
                            <input class="text-box single-line expandableListInput phoneNumberInput"
                                   type="tel" value="@(mfr.PhoneNumbers[j])" autocomplete="off"/>
                        }
                    }
                </div>
                <div class="inputContainer emailAddressContainer">
                    <p class="inputLabel">Email addresses: </p>
                    @for (int j = 0; j <= mfr.EmailAddresses.Count; j++)
                    {
                        if (j >= mfr.EmailAddresses.Count)
                        {
                            <input class="text-box single-line expandableListInput emailAddressInput"
                                   type="email" autocomplete="off"/>
                        }
                        else
                        {
                            <input class="text-box single-line expandableListInput emailAddressInput"
                                   type="email" value="@(mfr.EmailAddresses[j])" autocomplete="off"/>
                        }
                    }
                </div>
            </div>
        }
    }
    else
    { @* Blank model inserted when no manufacturers are defined *@
    <div class="listItem cloneableListItem manufacturerContainer">
        <div class="inputContainer">
            <p class="inputLabel">Name: </p>
            <input class="text-box single-line" type="text" autocomplete="off"/>
        </div>
        <div class="inputContainer phoneNumberContainer">
            <p class="inputLabel">Phone Numbers: </p>
            <input class="text-box single-line expandableListInput phoneNumberInput"
                   type="tel" autocomplete="off"/>
        </div>
        <div class="inputContainer emailAddressContainer">
            <p class="inputLabel">Email addresses: </p>
            <input class="text-box single-line expandableListInput emailAddressInput"
                   type="email" autocomplete="off"/>
        </div>
    </div>
}
    <div class="listItem btnAddListItemContainer">
        <button class="btnAddListItem" id="btnNewManufacturer">Add Manufacturer</button>
    </div>
</div>

<div class="list" id="modelsList">
    <h2 class="listTitle">Asset Models</h2>
    @if (Model.AssetModels.Count > 0)
    {

        @for (int i = 0; i < Model.AssetModels.Count; i++)
        {
            var mdl = Model.AssetModels[i];
            <div class="listItem cloneableListItem modelContainer">
                <div class="inputContainer">
                    <p class="inputLabel">Name: </p>
                    <input class="text-box single-line nameInput" type="text" 
                           value="@(mdl.Name)" old-value="@(mdl.Name)" 
                           original-value="@(mdl.Name)" autocomplete="off">
                </div>
                <div class="inputContainer">
                    <p class="inputLabel">Model Number: </p>
                    <input class="text-box single-line modelNumberInput" type="text" 
                           value="@(mdl.ModelNumber)" old-value="@(mdl.ModelNumber)"
                           autocomplete="off">
                </div>
                <div class="inputContainer">
                    <p class="inputLabel">Type: </p>
                    <select class="typeSelector">
                        @for (int j = 0; j < Model.AssetTypes.Count; j++)
                        {
                            var type = Model.AssetTypes[j];
                            <option value="@(type.Name)"
                                    selected=@(mdl.TypeId.Equals(type.Id))>
                                @(type.Name)
                            </option>
                        }
                    </select>
                </div>
                <div class="inputContainer">
                    <p class="inputLabel">Manufacturer: </p>
                    <select class="manufacturerSelector">
                        @for (int j = 0; j < Model.AssetManufacturers.Count; j++)
                        {
                            var mfr = Model.AssetManufacturers[j];
                            <option value="@(mfr.Name)"
                                    selected="@(mfr.Id.Equals(mdl.ManufacturerId))">
                                @(mfr.Name)
                            </option>
                        }
                    </select>
                </div>
            </div>
        }
    }
    else
    { @* Blank model inserted when no models are defined *@
    <div class="listItem cloneableListItem modelContainer">
        <div class="inputContainer">
            <p class="inputLabel">Name: </p>
            <input class="text-box single-line nameInput" type="text" autocomplete="off"/>
        </div>
        <div class="inputContainer">
            <p class="inputLabel">Model Number: </p>
            <input class="text-box single-line" type="text" autocomplete="off"/>
        </div>
        <div class="inputContainer">
            <p class="inputLabel">Type: </p>
            <select class="typeSelector">
                @for (int j = 0; j < Model.AssetTypes.Count; j++)
                {
                    var type = Model.AssetTypes[j];
                    <option value="@(type.Name)">@(type.Name)</option>
                }
            </select>
        </div>
        <div class="inputContainer">
            <p class="inputLabel">Manufacturer: </p>
            <select class="manufacturerSelector">
                @for (int j = 0; j < Model.AssetManufacturers.Count; j++)
                {
                    var mfr = Model.AssetManufacturers[j];
                    <option value="@(mfr.Name)">@(mfr.Name)</option>
                }
            </select>
        </div>
    </div>
}
    <div class="listItem btnAddListItemContainer">
        <button class="btnAddListItem" id="btnNewModel">Add Model</button>
    </div>
</div>

<div class="btnSubmitCtr">
    <button class="btnSubmit" id="btnSubmit">Submit</button>
</div>